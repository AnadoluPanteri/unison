#!/usr/bin/make -f

# export DH_VERBOSE=1
export DH_COMPAT=2

# set $(NATIVE) to true if this arch has an optimising compiler
NATIVE := $(shell test -x /usr/bin/ocamlopt && echo true || echo false)

build: build-stamp
build-stamp:
	dh_testdir
#	if we have the optimising compiler, build natively with debugging because
#	we can strip it later. if we don't, disable debugging because stripping
#	the non-native binaries removes the bytecode and leaves you with the
#	interpreter, and a somewhat useless binary... =)
	$(MAKE) UISTYLE=gtk NATIVE=$(NATIVE) DEBUGGING=$(NATIVE)
	mv unison unison-gtk
	$(MAKE) UISTYLE=text NATIVE=$(NATIVE) DEBUGGING=$(NATIVE)
	$(CURDIR)/unison -doc all > $(CURDIR)/unison-manual.txt
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	rm -f unison-manual.txt unison-gtk
	-$(MAKE) clean
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	install -o root -g root -m 755 unison $(CURDIR)/debian/unison/usr/bin
	install -o root -g root -m 755 unison-gtk $(CURDIR)/debian/unison-gtk/usr/bin
	ln -s unison $(CURDIR)/debian/unison-gtk/usr/share/doc/unison-gtk
	ln -s unison.1.gz $(CURDIR)/debian/unison-gtk/usr/share/man/man1/unison-gtk.1.gz

binary-indep: build install

binary-arch: build install
#	dh_testversion
	dh_testdir
	dh_testroot
#	dh_installdebconf
	dh_installdocs
#	dh_installexamples
	dh_installmenu
#	dh_installemacsen
#	dh_installpam
#	dh_installinit
#	dh_installcron
	dh_installman debian/unison.1
#	dh_installinfo
#	dh_undocumented
	dh_installchangelogs NEWS
#	dh_link
#	only strip it if it's native or it breaks
	set -e;					\
	if [ -x "/usr/bin/ocamlopt" ]; then	\
		dh_strip;			\
	fi
	dh_compress
	dh_fixperms
#	dh_suidregister
#	dh_makeshlibs
	dh_installdeb
#	dh_perl
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
